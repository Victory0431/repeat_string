def repeat(s):
    result = ""
    i = 0
    while i < len(s):
        if s[i].isdigit():
            #数字开头情况
            j = i + 1
            while j < len(s) and s[j] != '[':
                j += 1
            count = int(s[i:j])
            #求出重复次数  1 - 1000
            k = j + 1
            brackets = 1
            while k < len(s) and brackets > 0:
                #找出本层嵌套深度  也可以使用栈的匹配实现
                if s[k] == '[':
                    brackets += 1
                elif s[k] == ']':
                    brackets -= 1
                k += 1
            #实现递归的内部调用
            inner_string = helper(s[j+1:k - 1])
            result += count * inner_string
            i = k
        else:
            #递归出口
            result += s[i]
            i += 1
    return result

# 测试样例
print(helper("ef3[a]2[bc]gh"))  # 输出: "efaaabcbcgh"
print(helper("3[a2[c]]"))  # 输出: "accaccacc"
print(helper("2[3[a]b2[c]]"))  # 输出: "aaabccccaabccc"
